// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetCategoriesData, GetCategoriesResponses, GetCategoriesErrors, NewCategoryData, NewCategoryResponses, NewCategoryErrors, RemoveCategoryData, RemoveCategoryResponses, RemoveCategoryErrors, EditCategoryData, EditCategoryResponses, EditCategoryErrors, NewItemTypeData, NewItemTypeResponses, NewItemTypeErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Categories
 */
export const getCategories = <ThrowOnError extends boolean = false>(options?: Options<GetCategoriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCategoriesResponses, GetCategoriesErrors, ThrowOnError>({
        url: '/categories/',
        ...options
    });
};

/**
 * New Category
 */
export const newCategory = <ThrowOnError extends boolean = false>(options: Options<NewCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<NewCategoryResponses, NewCategoryErrors, ThrowOnError>({
        url: '/categories/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Remove Category
 */
export const removeCategory = <ThrowOnError extends boolean = false>(options: Options<RemoveCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<RemoveCategoryResponses, RemoveCategoryErrors, ThrowOnError>({
        url: '/categories/{uuid}',
        ...options
    });
};

/**
 * Edit Category
 */
export const editCategory = <ThrowOnError extends boolean = false>(options: Options<EditCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<EditCategoryResponses, EditCategoryErrors, ThrowOnError>({
        url: '/categories/{uuid}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * New Item Type
 */
export const newItemType = <ThrowOnError extends boolean = false>(options: Options<NewItemTypeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<NewItemTypeResponses, NewItemTypeErrors, ThrowOnError>({
        url: '/item_types/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};